// Copyright 2024-2025 CardinalHQ, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: apps_deployment_summary.proto

package graphpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AppsDeploymentSummary summarizes a Kubernetes apps/v1 Deployment.
type AppsDeploymentSummary struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	BaseObject *BaseObject            `protobuf:"bytes,1,opt,name=base_object,json=baseObject,proto3" json:"base_object,omitempty"`
	// "label_selectors" corresponds to the pod label selectors in the
	// Deployment's PodTemplateSpec pod label selectors.
	LabelSelectors map[string]string `protobuf:"bytes,2,rep,name=label_selectors,json=labelSelectors,proto3" json:"label_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// "service_account_name" corresponds to the service account name in the
	// Deployment's PodTemplateSpec.
	ServiceAccountName string `protobuf:"bytes,3,opt,name=service_account_name,json=serviceAccountName,proto3" json:"service_account_name,omitempty"`
	// "containers" is a list of containers within the
	// Deployment's PodTemplateSpec.
	Containers []*AppsDeploymentPodContainerSummary `protobuf:"bytes,4,rep,name=containers,proto3" json:"containers,omitempty"`
	// "pod_metadata" is the metadata of the Deployment's PodTemplateSpec.
	PodMetadata *BaseObject `protobuf:"bytes,5,opt,name=pod_metadata,json=podMetadata,proto3" json:"pod_metadata,omitempty"`
	// "status" is the status of the Deployment, which indicats the controller's
	// observation of the Deployment's state.
	Status        *AppDeploymentStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppsDeploymentSummary) Reset() {
	*x = AppsDeploymentSummary{}
	mi := &file_apps_deployment_summary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppsDeploymentSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsDeploymentSummary) ProtoMessage() {}

func (x *AppsDeploymentSummary) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deployment_summary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsDeploymentSummary.ProtoReflect.Descriptor instead.
func (*AppsDeploymentSummary) Descriptor() ([]byte, []int) {
	return file_apps_deployment_summary_proto_rawDescGZIP(), []int{0}
}

func (x *AppsDeploymentSummary) GetBaseObject() *BaseObject {
	if x != nil {
		return x.BaseObject
	}
	return nil
}

func (x *AppsDeploymentSummary) GetLabelSelectors() map[string]string {
	if x != nil {
		return x.LabelSelectors
	}
	return nil
}

func (x *AppsDeploymentSummary) GetServiceAccountName() string {
	if x != nil {
		return x.ServiceAccountName
	}
	return ""
}

func (x *AppsDeploymentSummary) GetContainers() []*AppsDeploymentPodContainerSummary {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *AppsDeploymentSummary) GetPodMetadata() *BaseObject {
	if x != nil {
		return x.PodMetadata
	}
	return nil
}

func (x *AppsDeploymentSummary) GetStatus() *AppDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// PodContainerSummary summarizes a container within a Pod.
type AppsDeploymentPodContainerSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// "name" is the name of the container.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// "image" is the container's image details.
	Image *ImageSummary `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// "resources" corresponds to the container resource requests and limits.
	Resources map[string]string `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// "config_map_names" is a list of ConfigMap names mounted or
	// used as an environment variable in the container.
	ConfigMapNames []string `protobuf:"bytes,4,rep,name=config_map_names,json=configMapNames,proto3" json:"config_map_names,omitempty"`
	// "secret_names" is a list of Secret names mounted or
	// used as an environment variable in the container.
	SecretNames   []string `protobuf:"bytes,5,rep,name=secret_names,json=secretNames,proto3" json:"secret_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppsDeploymentPodContainerSummary) Reset() {
	*x = AppsDeploymentPodContainerSummary{}
	mi := &file_apps_deployment_summary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppsDeploymentPodContainerSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsDeploymentPodContainerSummary) ProtoMessage() {}

func (x *AppsDeploymentPodContainerSummary) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deployment_summary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsDeploymentPodContainerSummary.ProtoReflect.Descriptor instead.
func (*AppsDeploymentPodContainerSummary) Descriptor() ([]byte, []int) {
	return file_apps_deployment_summary_proto_rawDescGZIP(), []int{1}
}

func (x *AppsDeploymentPodContainerSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppsDeploymentPodContainerSummary) GetImage() *ImageSummary {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *AppsDeploymentPodContainerSummary) GetResources() map[string]string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *AppsDeploymentPodContainerSummary) GetConfigMapNames() []string {
	if x != nil {
		return x.ConfigMapNames
	}
	return nil
}

func (x *AppsDeploymentPodContainerSummary) GetSecretNames() []string {
	if x != nil {
		return x.SecretNames
	}
	return nil
}

// AppDeploymentStatus is the status of a Kubernetes apps/v1 Deployment.
type AppDeploymentStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// "replicas" is the number of desired replicas in the Deployment.
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// "ready_replicas" is the number of ready replicas in the Deployment.
	ReadyReplicas int32 `protobuf:"varint,2,opt,name=ready_replicas,json=readyReplicas,proto3" json:"ready_replicas,omitempty"`
	// "available_replicas" is the number of available replicas in the Deployment.
	AvailableReplicas int32 `protobuf:"varint,3,opt,name=available_replicas,json=availableReplicas,proto3" json:"available_replicas,omitempty"`
	// "unavailable_replicas" is the number of unavailable replicas in the Deployment.
	UnavailableReplicas int32 `protobuf:"varint,4,opt,name=unavailable_replicas,json=unavailableReplicas,proto3" json:"unavailable_replicas,omitempty"`
	// "updated_replicas" is the number of updated replicas in the Deployment.
	UpdatedReplicas int32 `protobuf:"varint,5,opt,name=updated_replicas,json=updatedReplicas,proto3" json:"updated_replicas,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppDeploymentStatus) Reset() {
	*x = AppDeploymentStatus{}
	mi := &file_apps_deployment_summary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppDeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDeploymentStatus) ProtoMessage() {}

func (x *AppDeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apps_deployment_summary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDeploymentStatus.ProtoReflect.Descriptor instead.
func (*AppDeploymentStatus) Descriptor() ([]byte, []int) {
	return file_apps_deployment_summary_proto_rawDescGZIP(), []int{2}
}

func (x *AppDeploymentStatus) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *AppDeploymentStatus) GetReadyReplicas() int32 {
	if x != nil {
		return x.ReadyReplicas
	}
	return 0
}

func (x *AppDeploymentStatus) GetAvailableReplicas() int32 {
	if x != nil {
		return x.AvailableReplicas
	}
	return 0
}

func (x *AppDeploymentStatus) GetUnavailableReplicas() int32 {
	if x != nil {
		return x.UnavailableReplicas
	}
	return 0
}

func (x *AppDeploymentStatus) GetUpdatedReplicas() int32 {
	if x != nil {
		return x.UpdatedReplicas
	}
	return 0
}

var File_apps_deployment_summary_proto protoreflect.FileDescriptor

var file_apps_deployment_summary_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd9, 0x03, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x5b, 0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x0c,
	0x70, 0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x70, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc8, 0x02,
	0x0a, 0x21, 0x41, 0x70, 0x70, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70, 0x62,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x68, 0x71, 0x2f, 0x6f, 0x74, 0x65, 0x6c, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_apps_deployment_summary_proto_rawDescOnce sync.Once
	file_apps_deployment_summary_proto_rawDescData []byte
)

func file_apps_deployment_summary_proto_rawDescGZIP() []byte {
	file_apps_deployment_summary_proto_rawDescOnce.Do(func() {
		file_apps_deployment_summary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apps_deployment_summary_proto_rawDesc), len(file_apps_deployment_summary_proto_rawDesc)))
	})
	return file_apps_deployment_summary_proto_rawDescData
}

var file_apps_deployment_summary_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_apps_deployment_summary_proto_goTypes = []any{
	(*AppsDeploymentSummary)(nil),             // 0: graphpb.AppsDeploymentSummary
	(*AppsDeploymentPodContainerSummary)(nil), // 1: graphpb.AppsDeploymentPodContainerSummary
	(*AppDeploymentStatus)(nil),               // 2: graphpb.AppDeploymentStatus
	nil,                                       // 3: graphpb.AppsDeploymentSummary.LabelSelectorsEntry
	nil,                                       // 4: graphpb.AppsDeploymentPodContainerSummary.ResourcesEntry
	(*BaseObject)(nil),                        // 5: graphpb.BaseObject
	(*ImageSummary)(nil),                      // 6: graphpb.ImageSummary
}
var file_apps_deployment_summary_proto_depIdxs = []int32{
	5, // 0: graphpb.AppsDeploymentSummary.base_object:type_name -> graphpb.BaseObject
	3, // 1: graphpb.AppsDeploymentSummary.label_selectors:type_name -> graphpb.AppsDeploymentSummary.LabelSelectorsEntry
	1, // 2: graphpb.AppsDeploymentSummary.containers:type_name -> graphpb.AppsDeploymentPodContainerSummary
	5, // 3: graphpb.AppsDeploymentSummary.pod_metadata:type_name -> graphpb.BaseObject
	2, // 4: graphpb.AppsDeploymentSummary.status:type_name -> graphpb.AppDeploymentStatus
	6, // 5: graphpb.AppsDeploymentPodContainerSummary.image:type_name -> graphpb.ImageSummary
	4, // 6: graphpb.AppsDeploymentPodContainerSummary.resources:type_name -> graphpb.AppsDeploymentPodContainerSummary.ResourcesEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_apps_deployment_summary_proto_init() }
func file_apps_deployment_summary_proto_init() {
	if File_apps_deployment_summary_proto != nil {
		return
	}
	file_base_proto_init()
	file_image_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apps_deployment_summary_proto_rawDesc), len(file_apps_deployment_summary_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_deployment_summary_proto_goTypes,
		DependencyIndexes: file_apps_deployment_summary_proto_depIdxs,
		MessageInfos:      file_apps_deployment_summary_proto_msgTypes,
	}.Build()
	File_apps_deployment_summary_proto = out.File
	file_apps_deployment_summary_proto_goTypes = nil
	file_apps_deployment_summary_proto_depIdxs = nil
}
