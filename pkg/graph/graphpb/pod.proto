// Copyright 2024-2025 CardinalHQ, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package graphpb;

option go_package = "github.com/cardinalhq/oteltools/pkg/graph/graphpb";

import "google/protobuf/timestamp.proto";

import "base.proto";
import "image.proto";

// PodSummary summarizes a Kubernetes Pod.
message PodSummary {
  BaseObject base_object = 1;

  // "spec" is the spec of the Pod, which is static.
  PodSpec spec = 2;

  // "status" is the dynamic status of the Pod.
  PodStatus status = 3;
}

// PodSpec is the spec of a PodSummary.
message PodSpec {
  repeated PodContainerSummary containers = 1;
  string service_account_name = 2;
}

// PodStatus is the status of a PodSummary.
message PodStatus {
  repeated string host_ips = 1;
  repeated string pod_ips = 2;
  string phase = 3;
  google.protobuf.Timestamp started_at = 4;
  string phase_message = 5;
}

// PodContainerSummary summarizes a container within a Pod.
message PodContainerSummary {
  PodContainerSpec spec = 1;
  PodContainerStatus status = 2;
}

// PodContainerSpec is the spec of a PodContainerSummary.
message PodContainerSpec {
  string name = 1;
  ImageSummary image = 2;
  map<string, string> resources = 3;
  repeated string config_map_names = 4;
  repeated string secret_names = 5;
}

// PodContainerStatus is the status of a PodContainerSummary.
message PodContainerStatus {
  bool ready = 1;
  // The "resources" field corresponds to the container resource requests.
  bool is_image_pull_back_off = 2;
  bool is_crash_loop_back_off = 3;
  bool was_oom_killed = 4;
}
