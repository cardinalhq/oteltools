// Copyright 2024-2025 CardinalHQ, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: log_ingest_stats.proto

package chqpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogIngestStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exemplar      []byte                 `protobuf:"bytes,1,opt,name=exemplar,proto3" json:"exemplar,omitempty"`
	EventsCount   int64                  `protobuf:"varint,2,opt,name=eventsCount,proto3" json:"eventsCount,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=sizeBytes,proto3" json:"sizeBytes,omitempty"`
	Key           *LogIngestStat_Key     `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogIngestStat) Reset() {
	*x = LogIngestStat{}
	mi := &file_log_ingest_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogIngestStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIngestStat) ProtoMessage() {}

func (x *LogIngestStat) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIngestStat.ProtoReflect.Descriptor instead.
func (*LogIngestStat) Descriptor() ([]byte, []int) {
	return file_log_ingest_stats_proto_rawDescGZIP(), []int{0}
}

func (x *LogIngestStat) GetExemplar() []byte {
	if x != nil {
		return x.Exemplar
	}
	return nil
}

func (x *LogIngestStat) GetEventsCount() int64 {
	if x != nil {
		return x.EventsCount
	}
	return 0
}

func (x *LogIngestStat) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *LogIngestStat) GetKey() *LogIngestStat_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type LogIngestStatsList struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Stats         []*LogIngestStat        `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Key           *LogIngestStatsList_Key `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogIngestStatsList) Reset() {
	*x = LogIngestStatsList{}
	mi := &file_log_ingest_stats_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogIngestStatsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIngestStatsList) ProtoMessage() {}

func (x *LogIngestStatsList) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_stats_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIngestStatsList.ProtoReflect.Descriptor instead.
func (*LogIngestStatsList) Descriptor() ([]byte, []int) {
	return file_log_ingest_stats_proto_rawDescGZIP(), []int{1}
}

func (x *LogIngestStatsList) GetStats() []*LogIngestStat {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *LogIngestStatsList) GetKey() *LogIngestStatsList_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type LogIngestStat_Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Fingerprint   int64                  `protobuf:"varint,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	TsHour        int64                  `protobuf:"varint,3,opt,name=tsHour,proto3" json:"tsHour,omitempty"`
	Attributes    []*Attribute           `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	CustomerId    string                 `protobuf:"bytes,5,opt,name=customerId,proto3" json:"customerId,omitempty"`
	PhaseType     string                 `protobuf:"bytes,6,opt,name=phaseType,proto3" json:"phaseType,omitempty"`
	ProcessorId   string                 `protobuf:"bytes,7,opt,name=processorId,proto3" json:"processorId,omitempty"`
	CollectorId   string                 `protobuf:"bytes,8,opt,name=collectorId,proto3" json:"collectorId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogIngestStat_Key) Reset() {
	*x = LogIngestStat_Key{}
	mi := &file_log_ingest_stats_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogIngestStat_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIngestStat_Key) ProtoMessage() {}

func (x *LogIngestStat_Key) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_stats_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIngestStat_Key.ProtoReflect.Descriptor instead.
func (*LogIngestStat_Key) Descriptor() ([]byte, []int) {
	return file_log_ingest_stats_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LogIngestStat_Key) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogIngestStat_Key) GetFingerprint() int64 {
	if x != nil {
		return x.Fingerprint
	}
	return 0
}

func (x *LogIngestStat_Key) GetTsHour() int64 {
	if x != nil {
		return x.TsHour
	}
	return 0
}

func (x *LogIngestStat_Key) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *LogIngestStat_Key) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *LogIngestStat_Key) GetPhaseType() string {
	if x != nil {
		return x.PhaseType
	}
	return ""
}

func (x *LogIngestStat_Key) GetProcessorId() string {
	if x != nil {
		return x.ProcessorId
	}
	return ""
}

func (x *LogIngestStat_Key) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

type LogIngestStatsList_Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CustomerId    string                 `protobuf:"bytes,1,opt,name=customerId,proto3" json:"customerId,omitempty"`
	PhaseType     string                 `protobuf:"bytes,2,opt,name=phaseType,proto3" json:"phaseType,omitempty"`
	ProcessorId   string                 `protobuf:"bytes,3,opt,name=processorId,proto3" json:"processorId,omitempty"`
	CollectorId   string                 `protobuf:"bytes,4,opt,name=collectorId,proto3" json:"collectorId,omitempty"`
	TsHour        int64                  `protobuf:"varint,5,opt,name=tsHour,proto3" json:"tsHour,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogIngestStatsList_Key) Reset() {
	*x = LogIngestStatsList_Key{}
	mi := &file_log_ingest_stats_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogIngestStatsList_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIngestStatsList_Key) ProtoMessage() {}

func (x *LogIngestStatsList_Key) ProtoReflect() protoreflect.Message {
	mi := &file_log_ingest_stats_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIngestStatsList_Key.ProtoReflect.Descriptor instead.
func (*LogIngestStatsList_Key) Descriptor() ([]byte, []int) {
	return file_log_ingest_stats_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LogIngestStatsList_Key) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *LogIngestStatsList_Key) GetPhaseType() string {
	if x != nil {
		return x.PhaseType
	}
	return ""
}

func (x *LogIngestStatsList_Key) GetProcessorId() string {
	if x != nil {
		return x.ProcessorId
	}
	return ""
}

func (x *LogIngestStatsList_Key) GetCollectorId() string {
	if x != nil {
		return x.CollectorId
	}
	return ""
}

func (x *LogIngestStatsList_Key) GetTsHour() int64 {
	if x != nil {
		return x.TsHour
	}
	return 0
}

var File_log_ingest_stats_proto protoreflect.FileDescriptor

const file_log_ingest_stats_proto_rawDesc = "" +
	"\n" +
	"\x16log_ingest_stats.proto\x12\x05chqpb\x1a\x0fattribute.proto\"\xa7\x03\n" +
	"\rLogIngestStat\x12\x1a\n" +
	"\bexemplar\x18\x01 \x01(\fR\bexemplar\x12 \n" +
	"\veventsCount\x18\x02 \x01(\x03R\veventsCount\x12\x1c\n" +
	"\tsizeBytes\x18\x03 \x01(\x03R\tsizeBytes\x12*\n" +
	"\x03key\x18\x04 \x01(\v2\x18.chqpb.LogIngestStat.KeyR\x03key\x1a\x8d\x02\n" +
	"\x03Key\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12 \n" +
	"\vfingerprint\x18\x02 \x01(\x03R\vfingerprint\x12\x16\n" +
	"\x06tsHour\x18\x03 \x01(\x03R\x06tsHour\x120\n" +
	"\n" +
	"attributes\x18\x04 \x03(\v2\x10.chqpb.AttributeR\n" +
	"attributes\x12\x1e\n" +
	"\n" +
	"customerId\x18\x05 \x01(\tR\n" +
	"customerId\x12\x1c\n" +
	"\tphaseType\x18\x06 \x01(\tR\tphaseType\x12 \n" +
	"\vprocessorId\x18\a \x01(\tR\vprocessorId\x12 \n" +
	"\vcollectorId\x18\b \x01(\tR\vcollectorId\"\x93\x02\n" +
	"\x12LogIngestStatsList\x12*\n" +
	"\x05stats\x18\x01 \x03(\v2\x14.chqpb.LogIngestStatR\x05stats\x12/\n" +
	"\x03key\x18\x02 \x01(\v2\x1d.chqpb.LogIngestStatsList.KeyR\x03key\x1a\x9f\x01\n" +
	"\x03Key\x12\x1e\n" +
	"\n" +
	"customerId\x18\x01 \x01(\tR\n" +
	"customerId\x12\x1c\n" +
	"\tphaseType\x18\x02 \x01(\tR\tphaseType\x12 \n" +
	"\vprocessorId\x18\x03 \x01(\tR\vprocessorId\x12 \n" +
	"\vcollectorId\x18\x04 \x01(\tR\vcollectorId\x12\x16\n" +
	"\x06tsHour\x18\x05 \x01(\x03R\x06tsHourB\tZ\a.;chqpbb\x06proto3"

var (
	file_log_ingest_stats_proto_rawDescOnce sync.Once
	file_log_ingest_stats_proto_rawDescData []byte
)

func file_log_ingest_stats_proto_rawDescGZIP() []byte {
	file_log_ingest_stats_proto_rawDescOnce.Do(func() {
		file_log_ingest_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_ingest_stats_proto_rawDesc), len(file_log_ingest_stats_proto_rawDesc)))
	})
	return file_log_ingest_stats_proto_rawDescData
}

var file_log_ingest_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_log_ingest_stats_proto_goTypes = []any{
	(*LogIngestStat)(nil),          // 0: chqpb.LogIngestStat
	(*LogIngestStatsList)(nil),     // 1: chqpb.LogIngestStatsList
	(*LogIngestStat_Key)(nil),      // 2: chqpb.LogIngestStat.Key
	(*LogIngestStatsList_Key)(nil), // 3: chqpb.LogIngestStatsList.Key
	(*Attribute)(nil),              // 4: chqpb.Attribute
}
var file_log_ingest_stats_proto_depIdxs = []int32{
	2, // 0: chqpb.LogIngestStat.key:type_name -> chqpb.LogIngestStat.Key
	0, // 1: chqpb.LogIngestStatsList.stats:type_name -> chqpb.LogIngestStat
	3, // 2: chqpb.LogIngestStatsList.key:type_name -> chqpb.LogIngestStatsList.Key
	4, // 3: chqpb.LogIngestStat.Key.attributes:type_name -> chqpb.Attribute
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_log_ingest_stats_proto_init() }
func file_log_ingest_stats_proto_init() {
	if File_log_ingest_stats_proto != nil {
		return
	}
	file_attribute_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_ingest_stats_proto_rawDesc), len(file_log_ingest_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_log_ingest_stats_proto_goTypes,
		DependencyIndexes: file_log_ingest_stats_proto_depIdxs,
		MessageInfos:      file_log_ingest_stats_proto_msgTypes,
	}.Build()
	File_log_ingest_stats_proto = out.File
	file_log_ingest_stats_proto_goTypes = nil
	file_log_ingest_stats_proto_depIdxs = nil
}
